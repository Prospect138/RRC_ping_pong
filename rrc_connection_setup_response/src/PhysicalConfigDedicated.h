/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "EUTRA-RRC-Definitions.asn"
 * 	`asn1c -D src -pdu=RRCConnectionRequest -no-gen-OER -fcompound-names -no-gen-example -fno-include-deps`
 */

#ifndef	_PhysicalConfigDedicated_H_
#define	_PhysicalConfigDedicated_H_


#include <asn_application.h>

/* Including external dependencies */
#include "AntennaInfoDedicated.h"
#include <NULL.h>
#include <constr_CHOICE.h>
#include <constr_SEQUENCE.h>
#include <BOOLEAN.h>
#include "AntennaInfoDedicated-r10.h"
#include "AdditionalSpectrumEmission.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum PhysicalConfigDedicated__antennaInfo_PR {
	PhysicalConfigDedicated__antennaInfo_PR_NOTHING,	/* No components present */
	PhysicalConfigDedicated__antennaInfo_PR_explicitValue,
	PhysicalConfigDedicated__antennaInfo_PR_defaultValue
} PhysicalConfigDedicated__antennaInfo_PR;
typedef enum PhysicalConfigDedicated__ext2__antennaInfo_r10_PR {
	PhysicalConfigDedicated__ext2__antennaInfo_r10_PR_NOTHING,	/* No components present */
	PhysicalConfigDedicated__ext2__antennaInfo_r10_PR_explicitValue_r10,
	PhysicalConfigDedicated__ext2__antennaInfo_r10_PR_defaultValue
} PhysicalConfigDedicated__ext2__antennaInfo_r10_PR;
typedef enum PhysicalConfigDedicated__ext3__additionalSpectrumEmissionCA_r10_PR {
	PhysicalConfigDedicated__ext3__additionalSpectrumEmissionCA_r10_PR_NOTHING,	/* No components present */
	PhysicalConfigDedicated__ext3__additionalSpectrumEmissionCA_r10_PR_release,
	PhysicalConfigDedicated__ext3__additionalSpectrumEmissionCA_r10_PR_setup
} PhysicalConfigDedicated__ext3__additionalSpectrumEmissionCA_r10_PR;

/* Forward declarations */
struct PDSCH_ConfigDedicated;
struct PUCCH_ConfigDedicated;
struct PUSCH_ConfigDedicated;
struct UplinkPowerControlDedicated;
struct TPC_PDCCH_Config;
struct CQI_ReportConfig;
struct SoundingRS_UL_ConfigDedicated;
struct SchedulingRequestConfig;
struct CQI_ReportConfig_v920;
struct AntennaInfoDedicated_v920;
struct AntennaInfoUL_r10;
struct CQI_ReportConfig_r10;
struct CSI_RS_Config_r10;
struct PUCCH_ConfigDedicated_v1020;
struct PUSCH_ConfigDedicated_v1020;
struct SchedulingRequestConfig_v1020;
struct SoundingRS_UL_ConfigDedicated_v1020;
struct SoundingRS_UL_ConfigDedicatedAperiodic_r10;
struct UplinkPowerControlDedicated_v1020;
struct CSI_RS_ConfigNZPToReleaseList_r11;
struct CSI_RS_ConfigNZPToAddModList_r11;
struct CSI_RS_ConfigZPToReleaseList_r11;
struct CSI_RS_ConfigZPToAddModList_r11;
struct EPDCCH_Config_r11;
struct PDSCH_ConfigDedicated_v1130;
struct CQI_ReportConfig_v1130;
struct PUCCH_ConfigDedicated_v1130;
struct PUSCH_ConfigDedicated_v1130;
struct UplinkPowerControlDedicated_v1130;

/* PhysicalConfigDedicated */
typedef struct PhysicalConfigDedicated {
	struct PDSCH_ConfigDedicated	*pdsch_ConfigDedicated;	/* OPTIONAL */
	struct PUCCH_ConfigDedicated	*pucch_ConfigDedicated;	/* OPTIONAL */
	struct PUSCH_ConfigDedicated	*pusch_ConfigDedicated;	/* OPTIONAL */
	struct UplinkPowerControlDedicated	*uplinkPowerControlDedicated;	/* OPTIONAL */
	struct TPC_PDCCH_Config	*tpc_PDCCH_ConfigPUCCH;	/* OPTIONAL */
	struct TPC_PDCCH_Config	*tpc_PDCCH_ConfigPUSCH;	/* OPTIONAL */
	struct CQI_ReportConfig	*cqi_ReportConfig;	/* OPTIONAL */
	struct SoundingRS_UL_ConfigDedicated	*soundingRS_UL_ConfigDedicated;	/* OPTIONAL */
	struct PhysicalConfigDedicated__antennaInfo {
		PhysicalConfigDedicated__antennaInfo_PR present;
		union PhysicalConfigDedicated__antennaInfo_u {
			AntennaInfoDedicated_t	 explicitValue;
			NULL_t	 defaultValue;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *antennaInfo;
	struct SchedulingRequestConfig	*schedulingRequestConfig;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct PhysicalConfigDedicated__ext1 {
		struct CQI_ReportConfig_v920	*cqi_ReportConfig_v920;	/* OPTIONAL */
		struct AntennaInfoDedicated_v920	*antennaInfo_v920;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct PhysicalConfigDedicated__ext2 {
		struct PhysicalConfigDedicated__ext2__antennaInfo_r10 {
			PhysicalConfigDedicated__ext2__antennaInfo_r10_PR present;
			union PhysicalConfigDedicated__ext2__antennaInfo_r10_u {
				AntennaInfoDedicated_r10_t	 explicitValue_r10;
				NULL_t	 defaultValue;
			} choice;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *antennaInfo_r10;
		struct AntennaInfoUL_r10	*antennaInfoUL_r10;	/* OPTIONAL */
		BOOLEAN_t	*cif_Presence_r10;	/* OPTIONAL */
		struct CQI_ReportConfig_r10	*cqi_ReportConfig_r10;	/* OPTIONAL */
		struct CSI_RS_Config_r10	*csi_RS_Config_r10;	/* OPTIONAL */
		struct PUCCH_ConfigDedicated_v1020	*pucch_ConfigDedicated_v1020;	/* OPTIONAL */
		struct PUSCH_ConfigDedicated_v1020	*pusch_ConfigDedicated_v1020;	/* OPTIONAL */
		struct SchedulingRequestConfig_v1020	*schedulingRequestConfig_v1020;	/* OPTIONAL */
		struct SoundingRS_UL_ConfigDedicated_v1020	*soundingRS_UL_ConfigDedicated_v1020;	/* OPTIONAL */
		struct SoundingRS_UL_ConfigDedicatedAperiodic_r10	*soundingRS_UL_ConfigDedicatedAperiodic_r10;	/* OPTIONAL */
		struct UplinkPowerControlDedicated_v1020	*uplinkPowerControlDedicated_v1020;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	struct PhysicalConfigDedicated__ext3 {
		struct PhysicalConfigDedicated__ext3__additionalSpectrumEmissionCA_r10 {
			PhysicalConfigDedicated__ext3__additionalSpectrumEmissionCA_r10_PR present;
			union PhysicalConfigDedicated__ext3__additionalSpectrumEmissionCA_r10_u {
				NULL_t	 release;
				struct PhysicalConfigDedicated__ext3__additionalSpectrumEmissionCA_r10__setup {
					AdditionalSpectrumEmission_t	 additionalSpectrumEmissionPCell_r10;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} setup;
			} choice;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *additionalSpectrumEmissionCA_r10;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext3;
	struct PhysicalConfigDedicated__ext4 {
		struct CSI_RS_ConfigNZPToReleaseList_r11	*csi_RS_ConfigNZPToReleaseList_r11;	/* OPTIONAL */
		struct CSI_RS_ConfigNZPToAddModList_r11	*csi_RS_ConfigNZPToAddModList_r11;	/* OPTIONAL */
		struct CSI_RS_ConfigZPToReleaseList_r11	*csi_RS_ConfigZPToReleaseList_r11;	/* OPTIONAL */
		struct CSI_RS_ConfigZPToAddModList_r11	*csi_RS_ConfigZPToAddModList_r11;	/* OPTIONAL */
		struct EPDCCH_Config_r11	*epdcch_Config_r11;	/* OPTIONAL */
		struct PDSCH_ConfigDedicated_v1130	*pdsch_ConfigDedicated_v1130;	/* OPTIONAL */
		struct CQI_ReportConfig_v1130	*cqi_ReportConfig_v1130;	/* OPTIONAL */
		struct PUCCH_ConfigDedicated_v1130	*pucch_ConfigDedicated_v1130;	/* OPTIONAL */
		struct PUSCH_ConfigDedicated_v1130	*pusch_ConfigDedicated_v1130;	/* OPTIONAL */
		struct UplinkPowerControlDedicated_v1130	*uplinkPowerControlDedicated_v1130;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext4;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} PhysicalConfigDedicated_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_PhysicalConfigDedicated;
extern asn_SEQUENCE_specifics_t asn_SPC_PhysicalConfigDedicated_specs_1;
extern asn_TYPE_member_t asn_MBR_PhysicalConfigDedicated_1[14];

#ifdef __cplusplus
}
#endif

#endif	/* _PhysicalConfigDedicated_H_ */
#include <asn_internal.h>
